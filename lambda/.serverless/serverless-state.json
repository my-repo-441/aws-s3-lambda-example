{
  "service": {
    "service": "my-app-s3-lambda-hosting",
    "serviceObject": {
      "name": "my-app-s3-lambda-hosting"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.12",
      "region": "ap-northeast-1",
      "httpApi": {
        "cors": {
          "allowedOrigins": [
            "http://my-app-s3-lambda-hosting.s3-website-ap-northeast-1.amazonaws.com"
          ],
          "allowedMethods": [
            "GET",
            "POST",
            "OPTIONS",
            "PATCH",
            "PUT"
          ],
          "allowedHeaders": [
            "Content-Type",
            "Authorization",
            "x-requested-with",
            "origin",
            "accept"
          ]
        }
      },
      "environment": {
        "PYTHONPATH": "/var/task/src:/opt/python"
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "LambdaUnderscoreapiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/my-app-s3-lambda-hosting-dev-lambda_api"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "my-app-s3-lambda-hosting",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-app-s3-lambda-hosting-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-app-s3-lambda-hosting-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "my-app-s3-lambda-hosting",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "LambdaUnderscoreapiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-ap-northeast-1-47cb9f6c-ebc3",
                "S3Key": "serverless/my-app-s3-lambda-hosting/dev/1735886838974-2025-01-03T06:47:18.974Z/my-app-s3-lambda-hosting.zip"
              },
              "Handler": "lambda_function.lambda_handler",
              "Runtime": "python3.12",
              "FunctionName": "my-app-s3-lambda-hosting-dev-lambda_api",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "PYTHONPATH": "/var/task/src:/opt/python"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "LambdaUnderscoreapiLogGroup"
            ]
          },
          "LambdaUnderscoreapiLambdaVersionljOk6LCvmlsizMTYiPStpoR1QWuNNRABwBoHhlwYg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LambdaUnderscoreapiLambdaFunction"
              },
              "CodeSha256": "sAapbfjRvuk901SSScaYLHdhPDFpZktdSVYXWp+Atpo="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-my-app-s3-lambda-hosting",
              "ProtocolType": "HTTP",
              "CorsConfiguration": {
                "AllowHeaders": [
                  "Content-Type",
                  "Authorization",
                  "x-requested-with",
                  "origin",
                  "accept"
                ],
                "AllowMethods": [
                  "GET",
                  "POST",
                  "OPTIONS",
                  "PATCH",
                  "PUT"
                ],
                "AllowOrigins": [
                  "http://my-app-s3-lambda-hosting.s3-website-ap-northeast-1.amazonaws.com"
                ]
              }
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "LambdaUnderscoreapiLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LambdaUnderscoreapiLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationLambdaUnderscoreapi": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"LambdaUnderscoreapiLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetLambda": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /lambda",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationLambdaUnderscoreapi"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationLambdaUnderscoreapi"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-ap-northeast-1-47cb9f6c-ebc3",
            "Export": {
              "Name": "sls-my-app-s3-lambda-hosting-dev-ServerlessDeploymentBucketName"
            }
          },
          "LambdaUnderscoreapiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LambdaUnderscoreapiLambdaVersionljOk6LCvmlsizMTYiPStpoR1QWuNNRABwBoHhlwYg"
            },
            "Export": {
              "Name": "sls-my-app-s3-lambda-hosting-dev-LambdaUnderscoreapiLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-my-app-s3-lambda-hosting-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-my-app-s3-lambda-hosting-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "pythonRequirements": {
        "dockerizePip": true,
        "zip": true,
        "layer": true,
        "slim": true
      },
      "serverless-offline": {
        "port": 3000,
        "environment": {
          "PYTHONPATH": "./src"
        }
      }
    },
    "pluginsData": {},
    "functions": {
      "lambda_api": {
        "handler": "lambda_function.lambda_handler",
        "timeout": 30,
        "events": [
          {
            "httpApi": {
              "path": "/lambda",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/lambda"
          }
        ],
        "name": "my-app-s3-lambda-hosting-dev-lambda_api",
        "package": {},
        "memory": 1024,
        "runtime": "python3.12",
        "vpc": {},
        "versionLogicalId": "LambdaUnderscoreapiLambdaVersionljOk6LCvmlsizMTYiPStpoR1QWuNNRABwBoHhlwYg"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yaml",
    "initialServerlessConfig": {
      "org": "kuretom476946",
      "app": "my-app-s3-lambda-hosting",
      "service": "my-app-s3-lambda-hosting",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "package": {
        "exclude": [
          "node_modules/**",
          "README.md",
          "package-lock.json",
          ".git/**"
        ],
        "artifactsS3KeyDirname": "serverless/my-app-s3-lambda-hosting/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-ap-northeast-1-47cb9f6c-ebc3",
        "artifact": "/Users/keisuke/Documents/Python/tmp/lambda/.serverless/my-app-s3-lambda-hosting.zip",
        "artifactDirectoryName": "serverless/my-app-s3-lambda-hosting/dev/1735886838974-2025-01-03T06:47:18.974Z"
      }
    },
    "app": "my-app-s3-lambda-hosting",
    "appId": null,
    "org": "kuretom476946",
    "orgId": null,
    "layers": {},
    "artifact": "/Users/keisuke/Documents/Python/tmp/lambda/.serverless/my-app-s3-lambda-hosting.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/my-app-s3-lambda-hosting/dev/1735886838974-2025-01-03T06:47:18.974Z",
    "artifact": "my-app-s3-lambda-hosting.zip"
  }
}